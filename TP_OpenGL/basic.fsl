#version 430

layout (location=3) uniform vec3 color;

out vec4 color_out;

in vec3 normal_cameraspace;
in vec3 light_direction;
in float distance;

void main() {
	vec3 n = normalize(normal_cameraspace);
	vec3 l = normalize(light_direction);

	float cosTheta = clamp(dot(n,l), 0, 1);

	//color_out = vec4(n,1);
	color_out = 50 * vec4(color * cosTheta, 1) / (distance * distance);
}